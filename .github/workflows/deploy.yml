name: Build docker container and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from package.json
        id: get_version
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Build Docker image
        run: |
          REPO=ghcr.io/${{ github.repository_owner }}/landing
          echo "REPO=$REPO" >> $GITHUB_ENV

          docker compose build
          docker tag $REPO:latest $REPO:${{ steps.get_version.outputs.version }}
          docker tag $REPO:latest $REPO:latest

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/landing:${{ steps.get_version.outputs.version }}
          docker push ghcr.io/${{ github.repository_owner }}/landing:latest

      - name: Copy necessary files to VPS
        run: |
          echo "${{ secrets.VPS_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          scp -i private_key.pem -o StrictHostKeyChecking=no ./docker-compose.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}
          scp -i private_key.pem -o StrictHostKeyChecking=no -r ./nginx ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}
          scp -i private_key.pem -o StrictHostKeyChecking=no -r ./scripts ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:/home/${{ secrets.VPS_USER }}
          rm private_key.pem

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            echo "export CONTACT_EMAIL='${{ secrets.CONTACT_EMAIL }}'" >> ~/.bashrc
            echo "export CONTACT_PASS='${{ secrets.CONTACT_PASS }}'" >> ~/.bashrc
            source ~/.bashrc

            docker compose down || true
            docker compose pull
            docker compose up -d
            docker exec nginx nginx -s reload
            docker system prune -af --volumes
